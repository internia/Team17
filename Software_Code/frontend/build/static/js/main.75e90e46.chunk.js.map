{"version":3,"sources":["components/NewSearch.js","Home.js","components/Card.js","components/ProcedureList.js","About.js","Procedures.js","components/Version.js","components/ColorLayout.js","components/NavigationBar.js","components/SearchBar.js","components/HomepageSearch.js","components/LowerLayout.js","components/Footer.js","components/CityBanner.js","components/HospitalsMap.js","components/ProvCard.js","components/HospitalSearchBar.js","components/HospitalSelectionPanel.js","components/HospitalsSelection.js","App.js","serviceWorker.js","index.js","assets/city.png","assets/placeholder.png"],"names":["hStyle","Styles","styled","div","NewSearch","sendData","props","parentCallback","state","handleSubmit","event","preventDefault","setState","searchMain","handleOptionChange","changeEvent","selectedOption","target","value","searchLocation","searchRadius","this","home","margin","width","borderRadius","search","changeHStyle","onSubmit","style","Row","className","placeholder","type","onChange","updateMainSearch","bind","updateLocSearch","updateRadSearch","checked","onClick","Component","Home","callbackFunction","childData","s1","s2","s3","s4","background","Card","getStyle","padding","fontSize","backgroundColor","card","DRGDefinition","GPDID","ProviderName","TotalPayments","ProcedureList","procedures","map","key","id","About","ColorLayout","Container","children","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","SearchBar","getProcedures","fetch","document","getElementById","mode","method","headers","then","response","ok","json","data","handleChange","handleClick","alert","name","ReactDOM","render","LowerLayout","Footer","CityBanner","Col","class","Image","src","City","align","markers","HospitalsMap","origin","hospList","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","e","onMapClicked","nextProps","nextState","lcat","gd","getDistance","Math","round","arrayLength","length","finalProduct","i","findDistancesFromCoord","push","position","label","title","wi","height","hi","google","initialCenter","zoom","marcPush","visible","GoogleApiWrapper","apiKey","ProvCard","console","log","stater","State","Address","startLocation","lat","lng","stateLetters","locations","React","Array","stateoid","HospitalSelectionPanel","startRecord","y","obj","innerRecord","Latitude","longitude","record","left","getLocals","css","App","callbackFunction2","initial","proceduresLoaded","query","loading","Fragment","path","component","exact","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"qyEAOA,IAyGIA,EAzGEC,EAASC,IAAOC,IAAV,KA6GSC,E,YACjB,aAAe,IAAD,8BACV,+CAyBJC,SAAW,WACP,EAAKC,MAAMC,eAAe,EAAKC,QA3BrB,EA8BdC,aAAe,SAACC,GACZ,EAAKL,WACLK,EAAMC,iBACN,EAAKC,SAAS,CAAEC,WAAY,eAjClB,EAsCdC,mBAAqB,SAAAC,GACjB,EAAKH,SAAS,CACVI,eAAgBD,EAAYE,OAAOC,SAtCvC,EAAKV,MAAQ,CACTK,WAAY,GACZM,eAAgB,GAChBC,aAAc,GACdJ,eAAgB,YANV,E,4EAYNhB,EADmB,GAAnBqB,KAAKf,MAAMgB,KACF,CACLC,OAAQ,oBACRC,MAAO,OACPC,aAAc,QAGT,CACLF,OAAQ,kBACRC,MAAO,OACPC,aAAc,S,uCAuBTf,GACbW,KAAKT,SAAS,CAAEC,WAAYH,EAAMO,OAAOC,U,sCAE7BR,GACZW,KAAKT,SAAS,CAAEO,eAAgBT,EAAMO,OAAOC,U,sCAEjCR,GACZW,KAAKT,SAAS,CAAEQ,aAAcV,EAAMO,OAAOC,U,mCAElCR,GACTW,KAAKT,SAAS,CAAEc,OAAQhB,EAAMO,OAAOC,U,+BAKrC,OADAG,KAAKM,eAED,0BAAMC,SAAUP,KAAKZ,aAAcoB,MAAO,CAACL,MAAO,SAC9C,kBAACvB,EAAD,CAAQ4B,MAAO7B,GAEX,kBAAC8B,EAAA,EAAD,MAGA,kBAACA,EAAA,EAAD,KACI,2BAAOC,UAAU,aAAaF,MAAO,CAAEL,MAAO,QAA9C,wBACA,2BAAOO,UAAU,aAAaF,MAAO,CAAEL,MAAO,QAA9C,8BACA,2BAAOO,UAAU,aAAaF,MAAO,CAAEL,MAAO,QAA9C,uBAIJ,kBAACM,EAAA,EAAD,KACI,2BAAOC,UAAU,aACbC,YAAY,6BACZC,KAAK,OACLf,MAAOG,KAAKb,MAAMK,WAClBqB,SAAUb,KAAKc,iBAAiBC,KAAKf,QAEzC,2BAAOU,UAAU,YACbC,YAAY,gBACZC,KAAK,OACLf,MAAOG,KAAKb,MAAMW,eAClBe,SAAUb,KAAKgB,gBAAgBD,KAAKf,QAExC,2BAAOU,UAAU,YACbE,KAAK,OACLD,YAAY,WACZd,MAAOG,KAAKb,MAAMY,aAClBc,SAAUb,KAAKiB,gBAAgBF,KAAKf,SAG5C,kBAACS,EAAA,EAAD,KACI,2BACIC,UAAU,QACVE,KAAK,QACLf,MAAM,WACNqB,QAAuC,aAA9BlB,KAAKb,MAAMQ,eACpBkB,SAAUb,KAAKP,qBAEnB,2BAAOiB,UAAU,SAAjB,mBACA,2BACIA,UAAU,QACVE,KAAK,QACLf,MAAM,WACNqB,QAAuC,aAA9BlB,KAAKb,MAAMQ,eACpBkB,SAAUb,KAAKP,qBAEnB,2BAAOiB,UAAU,SAAjB,mBAEA,2BAAOF,MAAO,CAAEL,MAAO,SACvB,2BAAOO,UAAW,OACdE,KAAK,SACLf,MAAM,SACNsB,QAASnB,KAAKZ,sB,GApHHgC,a,uWCxGvC,IAAMxC,EAASC,IAAOC,IAAV,KAsBCuC,EAAb,YACI,WAAYpC,GAAQ,IAAD,8BACf,4CAAMA,KAUVD,SAAW,WACP,EAAKC,MAAMC,eAAe,EAAKC,QAZhB,EAiBnBmC,iBAAmB,SAACC,GAChB,EAAKhC,SAAS,CACViC,GAAID,EAAU/B,WACdiC,GAAIF,EAAUzB,eACd4B,GAAIH,EAAUxB,aACd4B,GAAIJ,EAAU5B,kBApBlB,EAAKR,MAAQ,CACTqC,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,IAAI,GANO,EADvB,sEA8BQ,OAAK3B,KAAKb,MAAMwC,GAaR,4BACI,4BAAK3B,KAAKb,MAAMqC,IAChB,4BAAKxB,KAAKb,MAAMsC,IAChB,4BAAKzB,KAAKb,MAAMuC,IAChB,4BAAK1B,KAAKb,MAAMwC,KAdpB,kBAAC,EAAD,KACI,kBAAC,EAAD,CAAW1B,MAAM,EAAMf,eAAgBc,KAAKf,MAAMC,iBAClD,kBAACuB,EAAA,EAAD,CAAKD,MAAO,CAAEoB,WAAY,kBAnC9C,GAA0BR,a,0nBC7B1B,IAAMxC,EAASC,IAAOC,IAAV,KAqGG+C,EAtEf,2MAEIC,SAAW,WACP,MAAO,CACHC,QAAS,QACTC,SAAU,UALtB,wEAYQ,OACI,kBAAC,EAAD,KAEA,yBAAKxB,MAAO,CAAC,aAAc,MAAO,QAAU,MAAOyB,gBAAiB,aAAcvB,UAAW,0BACzF,yBAAKA,UAAW,UAEZ,yBAAKA,UAAW,OACZ,yBAAKF,MAAO,CAACwB,SAAU,SAAUtB,UAAW,UACvCV,KAAKf,MAAMiD,KAAKC,gBAIzB,yBAAK3B,MAAO,CAACwB,SAAU,OAAStB,UAAW,OACvC,yBAAKA,UAAW,UAAhB,UACYV,KAAKf,MAAMiD,KAAKE,QAIhC,yBAAK5B,MAAO,CAAC,aAAa,OAAQE,UAAW,OACzC,yBAAKA,UAAW,SACXV,KAAKf,MAAMiD,KAAKG,cAErB,yBAAK3B,UAAW,qBAAhB,IACMV,KAAKf,MAAMiD,KAAKI,uBAnC9C,GAA0BlB,aClBXmB,E,iLAXX,OAAOvC,KAAKf,MAAMuD,WAAWC,KAAI,SAACP,GAAD,OAC7B,kBAAC,EAAD,CAAMQ,IAAKR,EAAKS,GAAIT,KAAMA,W,GAHNd,aCHfwB,GCGWxB,YDHH,kBACjB,6BACI,wBAAIZ,MAAO,CAAC,aAAa,QAAzB,YACA,4BACA,yLACA,4BACA,4CACA,4BACA,yBAAKE,UAAW,aACZ,yBAAKA,UAAW,OACZ,yBAAKA,UAAW,SAAhB,mBAGA,yBAAKA,UAAW,SAAhB,kBAGA,yBAAKA,UAAW,SAAhB,oBAIJ,yBAAKA,UAAW,YACZ,yBAAKA,UAAW,SAAhB,iBAGA,yBAAKA,UAAW,SAAhB,kBAGA,yBAAKA,UAAW,SAAhB,qB,+MEvBD7B,IAAOC,IAAV,KAAZ,I,gOCCA,IAAMF,EAASC,IAAOC,IAAV,KAMC+D,EAAc,SAAC5D,GAAD,OACvB,kBAAC,EAAD,KACQ,kBAAC6D,EAAA,EAAD,KACK7D,EAAM8D,Y,qUCVvB,IAAMnE,EAASC,IAAOC,IAAV,KAiBCkE,EAAgB,kBACzB,kBAAC,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,aACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBZ,GAAG,oBAChB,kBAACa,EAAA,EAAD,CAAK9C,UAAU,gB,wBCzBzB+C,E,YACJ,WAAYxE,GAAQ,IAAD,8BACjB,4CAAMA,KAQRD,SAAW,WACT,EAAKC,MAAMC,eAAe,qCAVT,EAqBnBwE,cAAgB,WACdC,MAAM,4CAA8CC,SAASC,eAAe,cAAchE,MAAO,CAC/FiE,KAAM,OACNC,OAAQ,MACRC,QAAQ,CACN,8BAA8B,OAC1BC,MAAK,SAAAC,GACPA,EAASC,IACXD,EAASE,OAAOH,MAAK,SAAAI,GAAI,OAAI,EAAK9E,SAAS,CAAE,WAAc8E,WA3B/D,EAAKlF,MAAQ,CAACU,MAAO,GAAI2C,WAAY,IAErC,EAAK8B,aAAe,EAAKA,aAAavD,KAAlB,gBACpB,EAAKwD,YAAc,EAAKA,YAAYxD,KAAjB,gBALF,E,0EAaN1B,GACXW,KAAKT,SAAS,CAACM,MAAO+D,SAASC,eAAe,cAAchE,U,kCAGlDR,GACVmF,MAAMxE,KAAKb,MAAMU,S,+BAmBjB,OAAIG,KAAKb,MAAMqD,WAEX,yBAAK9B,UAAW,aACd,yBAAKA,UAAW,iBACd,yBAAKA,UAAW,UACd,wDAGJ,yBAAKA,UAAW,OACd,yBAAKA,UAAW,SACbV,KAAKf,MAAMwF,OAGhB,yBAAK/D,UAAW,OAChB,yBAAKA,UAAW,SACZ,2BAAOE,KAAK,OAAOF,UAAW,eAAgBiC,GAAG,aAAa9B,SAAUb,KAAKsE,gBAE/E,yBAAK5D,UAAW,SACd,4BAAQA,UAAW,eAAgBS,QAASnB,KAAK0D,eAAjD,YAGJ,yBAAKhD,UAAW,YACd,yBAAKA,UAAW,UACd,kBAAC,EAAD,CAAe8B,WAAYxC,KAAKb,MAAMqD,gBAO5C,yBAAK9B,UAAW,aACd,yBAAKA,UAAW,iBACd,yBAAKA,UAAW,UACd,wDAGJ,yBAAKA,UAAW,OACd,yBAAKA,UAAW,SACbV,KAAKf,MAAMwF,OAGhB,yBAAK/D,UAAW,OACd,yBAAKA,UAAW,SACd,2BAAOE,KAAK,OAAOF,UAAW,eAAgBiC,GAAG,aAAa9B,SAAUb,KAAKsE,gBAE/E,yBAAK5D,UAAW,SACd,4BAAQA,UAAW,eAAgBS,QAASnB,KAAK0D,eAAjD,WAEF,uBAAGf,GAAG,kB,GAtFMvB,aAgGxBsD,IAASC,OAAO,kBAAC,EAAD,MAAef,SAASC,eAAe,S,sTC5FxChF,IAAOC,IAAV,K,uECDZ,IAAMF,EAASC,IAAOC,IAAV,KAGC8F,EAAc,SAAC3F,GAAD,OACvB,kBAAC,EAAD,KACQ,kBAAC6D,EAAA,EAAD,KACK7D,EAAM8D,Y,ySCVvB,IAAMnE,EAASC,IAAOC,IAAV,KAcC+F,EAAS,SAAC5F,GAAD,OAClB,kBAAC,EAAD,KACI,4BAAQyB,UAAU,UACd,yCACA,uE,0dCZZ,IAAM9B,GAASC,IAAOC,IAAV,KA0BCgG,GAAa,SAAC7F,GAAD,OACtB,kBAAC,GAAD,KACI,kBAACwB,EAAA,EAAD,KACI,kBAACsE,EAAA,EAAD,KAAK,wBAAIC,MAAM,eAAV,gDACL,kBAACD,EAAA,EAAD,KAAK,kBAACE,EAAA,EAAD,CAAOC,IAAKC,IAAMC,MAAM,YAEjC,kBAAC3E,EAAA,EAAD,KACI,kBAACsE,EAAA,EAAD,KACI,wBAAIC,MAAQ,gBAAZ,4BACA,8Q,6BCtCZK,GAAU,GASRC,G,2MASLC,OAAS,EAAKtG,MAAMuG,SAAS,G,EA4C7BrG,MAAQ,CACPsG,mBAAmB,EACnBC,aAAc,GACdC,cAAe,I,EAGhBC,cAAgB,SAAC3G,EAAO4G,EAAQC,GAAhB,OACf,EAAKvG,SAAS,CACboG,cAAe1G,EACfyG,aAAcG,EACdJ,mBAAmB,K,EAGrBM,aAAe,SAAC9G,GACX,EAAKE,MAAMsG,mBACd,EAAKlG,SAAS,CACbkG,mBAAmB,EACnBC,aAAc,Q,qFApEKM,EAAWC,GAChC,OAAGjG,KAAKb,MAAMuG,cAAgBO,EAAUP,e,6CAQlBQ,GACbA,EAAK,GAAd,IACIC,EAAKC,KAAYpG,KAAKf,MAAMuG,SAAS,GAAG,GAAIU,EAAK,IAErD,OAAOG,KAAKC,MAAMH,EAAK,KAAQ,O,oCAO/B,IAFA,IAAII,EAAcvG,KAAKf,MAAMuG,SAASgB,OAClCC,EAAe,GACVC,EAAI,EAAGA,EAAIH,EAAaG,IAChCD,EAAeA,EAAezG,KAAK2G,uBAAuB3G,KAAKf,MAAMuG,SAASkB,IAAM,OAErF,OAAOD,I,iCASP,IADA,IAAIF,EAAcvG,KAAKf,MAAMuG,SAASgB,OAC7BE,EAAI,EAAGA,EAAIH,EAAaG,IAC1B,GAAHA,EACFrB,GAAQuB,KAAK,kBAAC,UAAD,CACZC,SAAU7G,KAAKf,MAAMuG,SAASkB,GAAG,GACjCvF,QAASnB,KAAK4F,cACdkB,MAAO,eACPrC,KAAMzE,KAAKf,MAAMuG,SAASkB,GAAG,GAC7BK,MAAO/G,KAAKf,MAAMuG,SAASkB,GAAG,MAEhCrB,GAAQuB,KAAK,kBAAC,UAAD,CACZC,SAAU7G,KAAKf,MAAMuG,SAASkB,GAAG,GACjCvF,QAASnB,KAAK4F,cACdkB,MAAO9G,KAAK2G,uBAAuB3G,KAAKf,MAAMuG,SAASkB,IACvDjC,KAAMzE,KAAKf,MAAMuG,SAASkB,GAAG,GAC7BK,MAAO/G,KAAKf,MAAMuG,SAASkB,GAAG,Q,+BA4BhC,OACC,oCACC,yBAAKlG,MAAO,CAACL,MAAOH,KAAKf,MAAM+H,GAAIC,OAAQjH,KAAKf,MAAMiI,KACrD,kBAAC,OAAD,CAAKC,OAAQnH,KAAKf,MAAMkI,OACvBhG,QAASnB,KAAK+F,aACdqB,cAAepH,KAAKf,MAAMuG,SAAS,GAAG,GACtC6B,KAAM,GACN7G,MAAO,CAACL,MAAOH,KAAKf,MAAM+H,GAAIC,OAAQjH,KAAKf,MAAMiI,GAAIjF,gBAAiB,eAErEjC,KAAKsH,WACLjC,GACD,kBAAC,cAAD,CACCQ,OAAQ7F,KAAKb,MAAMuG,aACnB6B,QAASvH,KAAKb,MAAMsG,mBACpB,6BACC,4BAAKzF,KAAKb,MAAMwG,cAAclB,e,GA3FXrD,aAqGZoG,+BAAiB,CAE/BC,OAAQ,IAFMD,CAGZlC,I,4nBChHH,IAAM1G,GAASC,IAAOC,IAAV,MAmGG4I,GApEf,2MAEI5F,SAAW,WACP,MAAO,CACHC,QAAS,QACTC,SAAU,UALtB,wEAaQ,OADA2F,QAAQC,IAAI5H,KAAKf,MAAM4I,QACpB7H,KAAKf,MAAMiD,KAAK4F,OAAO9H,KAAKf,MAAME,MAE7B,kBAAC,GAAD,KACA,yBAAKqB,MAAO,CAAC,aAAc,MAAOyB,gBAAiB,aAAcvB,UAAW,0BACxE,yBAAKA,UAAW,SAAUF,MAAO,CAAC,cAAc,QAC5C,uBAAGA,MAAO,CAAC,SAAW,QAAQ,2BAAIR,KAAKf,MAAMiD,KAAKG,eAClD,uBAAG7B,MAAO,CAAC,SAAW,UAAWR,KAAKf,MAAMiD,KAAK6F,QAAjD,KAA4D/H,KAAKf,MAAMiD,KAAK4F,UAqBhF,kCAxCpB,GAA8B1G,a,yPC/B9B,IACM4G,GAAgB,CAACC,IAAK,QAASC,KAAM,SACrCC,GAAc,CAAE,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE5WvJ,GAASC,IAAOC,IAAV,MCLRsJ,IDsB4BC,IAAMjH,UCtBtB,IAAIkH,OAIhBC,GAAW,KACMC,G,YAuBjB,WAAYvJ,GAAQ,IAAD,8BACf,4CAAMA,KAIVyE,cAAgB,WACZC,MAAM,oCAAsC,CAC1CG,KAAM,OACNC,OAAQ,MACRC,QAAQ,CACN,8BAA8B,OAC1BC,MAAK,SAAAC,GACPA,EAASC,IACXD,EAASE,OAAOH,MAAK,SAAAI,GAAI,OAAI,EAAK9E,SAAS,CAAE,WAAc8E,WAX/D,EAAKlF,MAAQ,CAACU,MAAO,GAAI2C,WAAY,IAFtB,E,yEAnBjB,GADA+F,GAAWvI,KAAKf,MAAM4I,OACO,MAA1B7H,KAAKf,MAAM+I,cAAoB,CAChC,IAAIS,EAAc,CAAC,gBAAiBzI,KAAKf,MAAM+I,eAC/CI,GAAUxB,KAAK6B,GAIjB,IAFA,IAAIrE,EAAOpE,KAAKb,MAAMqD,WAClBkG,EAAE,EACEhC,EAAI,EAAGA,EAAItC,EAAKoC,OAAQE,IAAK,CACnC,IAAIiC,EAAMvE,EAAKsC,GACf,GAAGiC,EAAIb,OAAO9H,KAAKf,MAAM4I,QAAUa,EAAE,IAAI,CACvCA,IACA,IAAIE,EAAc,CAAEX,IAAKU,EAAIE,SAAUX,IAAKS,EAAIG,WAC5CC,EAAS,CAACJ,EAAItG,aAAcuG,GAChCR,GAAUxB,KAAKmC,IAIrBpB,QAAQC,IAAIQ,Q,8CAuBR,OADFpI,KAAK0D,gBACC1D,KAAKb,MAAMqD,WACW,GAAnBxC,KAAKf,MAAM+J,MACZhJ,KAAKiJ,YACLtB,QAAQC,IAAI5H,KAAKb,OAEb,kBAAC,GAAD,CAAcqG,SAAU4C,GAAWlB,GAAI,OAAQF,GAAI,WAGzDW,QAAQC,IAAI5H,KAAKf,MAAM4I,QAChB7H,KAAKb,MAAMqD,WAAWC,KAAI,SAACP,GAAD,OAC9B,kBAAC,GAAD,CAAU/C,MAAOoJ,GAAUrG,KAAMA,EAAMQ,IAAKR,EAAKS,GAAIyF,UAAWA,SAQjE,yC,GA7DsChH,a,yPCoBrCvC,IAAOC,IAAV,M,MAFZ,I,8ICGgB,IAAIwJ,MAChB,CAAC,SAAU,CAAEL,IAAK,UAAWC,KAAM,SACnC,CAAC,SAAU,CAAED,IAAK,UAAWC,KAAM,SACnC,CAAC,SAAU,CAAED,IAAK,UAAWC,KAAM,SACnC,CAAC,SAAU,CAAED,IAAK,UAAWC,KAAM,SACnC,CAAC,SAAU,CAAED,IAAK,UAAWC,KAAM,UAItBgB,eAAH,MATd,IA8IeC,G,YA9HX,WAAYlK,GAAQ,IAAD,8BACf,4CAAMA,KAcVyE,cAAgB,WACZC,MAAM,4CAA8C,EAAKxE,MAAMK,WAAY,CACvEsE,KAAM,OACNC,OAAQ,MACRC,QAAS,CACL,8BAA+B,OAEpCC,MAAK,SAAAC,GACAA,EAASC,IACTD,EAASE,OAAOH,MAAK,SAAAI,GAAI,OAAI,EAAK9E,SAAS,CAAE,WAAc8E,WAxBpD,EA6BnB+E,kBAAoB,SAAC7H,GACjBoG,QAAQC,IAAIrG,GACZ,EAAKhC,SAAS,CACVC,WAAY+B,EAAU/B,WACtBM,eAAgByB,EAAUzB,eAC1BC,aAAcwB,EAAUxB,aACxBJ,eAAgB4B,EAAU5B,iBAE9B,EAAKR,MAAMkK,SAAU,GAnCrB,EAAKlK,MAAQ,CACTqD,WAAY,GACZ8G,kBAAkB,EAClBC,MAAO,GACPC,SAAS,EACTH,SAAS,EACT7J,WAAY,GACZM,eAAgB,GAChBC,aAAc,GACdJ,gBAAgB,GAXL,E,sEA0Cf,OAAIK,KAAKb,MAAMkK,QAGP,kBAAC,IAAMI,SAAP,KAGI,kBAAC,EAAD,KACI,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACI,kBAAC,IAAD,KAII,kBAAC,EAAD,CAAMvK,eAAgBc,KAAKoJ,uBAOvC,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOM,KAAK,SAASC,UAAW/G,OAO5C,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOgH,OAAK,EAACF,KAAK,IAAIC,UAAW7E,QAM7C,kBAAC,EAAD,QAOH9E,KAAKb,MAAMmK,mBACZtJ,KAAK0D,gBACL1D,KAAKb,MAAMmK,kBAAmB,GAI9B,kBAAC,IAAMG,SAAP,KACI,kBAAC,EAAD,KACI,kBAAC,EAAD,OAIJ,yBAAK/I,UAAW,mBACZ,kBAACD,EAAA,EAAD,aAAKD,MAAO,CAAE,WAAc,WAAaE,UAAW,sBAApD,QAAiF,CAAEP,MAAO,SAEtF,kBAAC,EAAD,CAAWF,MAAM,KAKrB,kBAACQ,EAAA,EAAD,CAAKD,MAAO,CAAEyG,OAAQ,SAClB,yBAAKvG,UAAW,aACZ,kBAAC,EAAD,CAAe8B,WAAYxC,KAAKb,MAAMqD,cAG1C,yBAAKhC,MAAO,CAAE,WAAc,WAAaE,UAAW,SAChD,2C,GApHdU,aCnCEyI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNvF,IAASC,OAAO,kBAAC,GAAD,MAASf,SAASC,eAAe,SD6H3C,kBAAmBqG,WACrBA,UAAUC,cAAcC,MAAMnG,MAAK,SAAAoG,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC,6ECA3CD,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.75e90e46.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from 'styled-components';\n\n\n\nconst Styles = styled.div`\n\n\nbackground: rgb(11,156,219);\n    background: linear-gradient(162deg, rgba(11,156,219,1) 0%, rgba(128,219,120,1) 100%);\n    --bg: #E0E0E0;\n    --fg: grey;\n    --bd: #BDBDBD;\n\n    //border-radius: 14px;\n    background: white;\n    width: auto;\n    //margin: 50px 0px 80px 0px;\n    padding 30px;\n\n    // .row {\n    //     margin: '0px 0px 10px 0px', \n    //     width: auto;\n    //     background: blue;\n\n    // }\n\n    .smallLabel {\n        color: grey;\n        font-weight: bold;\n        font-size: small;\n        padding-left: 4px;\n    }\n\n    .label {\n        color: grey;\n        height: auto;\n        margin: 10px 0 0 0;\n       width: 15%; \n    }\n\n    .radio{\n        width: 3%;\n        margin: 17px 0px 0px 0px;\n        \n    }\n\n    .mainSearch {\n        width: 60%;\n        background: var(--bg);\n        color: var(--fg);\n        border: 3px solid var(--bd);\n        border-width: 2px 1px 2px 2px;\n        padding: 12px;\n        // padding-top: 17px;\n        // padding-right: 7px;\n        border-top-left-radius: 9px;\n        border-bottom-left-radius: 9px;\n    }  \n    \n    .locSearch {\n        width: 25%;\n        background: var(--bg);\n        color: var(--fg);\n        border: 2px solid var(--bd);\n        border-width: 2px 0px 2px 0px;\n        padding: 12px;\n        // padding-bottom: 17px;\n        // padding-top: 17px;\n    }\n    .radSearch {\n        width: 15%;\n        background: var(--bg);\n        color: var(--fg);\n        border: 3px solid var(--bd);\n        border-width: 2px 2px 2px 1px;\n        padding: 12px;\n        // padding-bottom: 17px;\n        // padding-top: 17px;\n        border-top-right-radius: 9px;\n        border-bottom-right-radius: 8px;\n    }\n\n    .butn {\n        width: 20%;\n        background: var(--bg);\n        color: var(--fg);\n        border: 2px solid var(--bd);\n        padding-bottom: 10px;\n        padding-top: 10px;\n        margin: 0px;\n        margin-top: 5px;\n        border-radius: 9px;\n    }  \n`;\n\nconst butStyle = {\n    width: '10%'\n}\n\nvar divStyle = {\n    background: 'yellow',\n    width: 'auto',\n    margin: '0px 0px 10px 0px',\n}\n\nvar boxStyle = {\n    width: '90%'\n}\n\nvar hStyle;\n\n\n\nexport default class NewSearch extends Component {\n    constructor() {\n        super();\n        this.state = {\n            searchMain: \"\",\n            searchLocation: \"\",\n            searchRadius: \"\",\n            selectedOption: \"procCode\"\n        }\n    }\n\n    changeHStyle() {\n        if (this.props.home == true) {\n            hStyle = {\n                margin: '50px 0px 80px 0px',\n                width: \"100%\",\n                borderRadius: '14px',\n            }\n        } else {\n            hStyle = {\n                margin: '0px 0px 0px 0px',\n                width: \"100%\",\n                borderRadius: '0px'\n            }\n        }\n    }\n\n    sendData = () => {\n        this.props.parentCallback(this.state);\n    }\n\n    handleSubmit = (event) => {\n        this.sendData()\n        event.preventDefault();\n        this.setState({ searchMain: \"Submitted\" });\n\n\n    }\n\n    handleOptionChange = changeEvent => {\n        this.setState({\n            selectedOption: changeEvent.target.value\n        });\n    };\n\n    updateMainSearch(event) {\n        this.setState({ searchMain: event.target.value })\n    }\n    updateLocSearch(event) {\n        this.setState({ searchLocation: event.target.value })\n    }\n    updateRadSearch(event) {\n        this.setState({ searchRadius: event.target.value })\n    }\n    updateSearch(event) {\n        this.setState({ search: event.target.value })\n    }\n\n    render() {\n        this.changeHStyle()\n        return (\n            <form onSubmit={this.handleSubmit} style={{width: \"100%\"}}>\n                <Styles style={hStyle}>\n                    {/* <label className=\"label\">Search By: </label> */}\n                    <Row>\n\n                    </Row>\n                    <Row>\n                        <label className=\"smallLabel\" style={{ width: '60%' }}>Search for procedure</label>\n                        <label className=\"smallLabel\" style={{ width: '25%' }}>(Optional) Enter Your City</label>\n                        <label className=\"smallLabel\" style={{ width: '15%' }}>Search Radius (KM)</label>\n\n\n                    </Row>\n                    <Row>\n                        <input className=\"mainSearch\"\n                            placeholder=\"Procedure name or DRG code\"\n                            type=\"text\"\n                            value={this.state.searchMain}\n                            onChange={this.updateMainSearch.bind(this)} />\n\n                        <input className=\"locSearch\"\n                            placeholder=\"City or state\"\n                            type=\"text\"\n                            value={this.state.searchLocation}\n                            onChange={this.updateLocSearch.bind(this)} />\n\n                        <input className=\"radSearch\"\n                            type=\"text\"\n                            placeholder=\"Distance\"\n                            value={this.state.searchRadius}\n                            onChange={this.updateRadSearch.bind(this)} />\n\n                    </Row>\n                    <Row>\n                        <input\n                            className=\"radio\"\n                            type=\"radio\"\n                            value=\"procCode\"\n                            checked={this.state.selectedOption === \"procCode\"}\n                            onChange={this.handleOptionChange}\n                        />\n                        <label className=\"label\">Procedure Code </label>\n                        <input\n                            className=\"radio\"\n                            type=\"radio\"\n                            value=\"procName\"\n                            checked={this.state.selectedOption === \"procName\"}\n                            onChange={this.handleOptionChange}\n                        />\n                        <label className=\"label\">Procedure Name </label>\n\n                        <label style={{ width: '44%' }}></label>\n                        <input className={'butn'}\n                            type=\"submit\"\n                            value=\"Submit\"\n                            onClick={this.handleSubmit} />\n                    </Row>\n                </Styles>\n            </ form>\n        )\n    }\n}\n\n{/* <Col>\n<input className=\"subSearch\"\n    type=\"text\"\n    value={this.state.search}\n    onChange={this.updateSearch.bind(this)} />\n</Col>\n<Col>\n<input className=\"subSearch\"\n    type=\"text\"\n    value={this.state.search}\n    onChange={this.updateSearch.bind(this)} />\n</Col> */}","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Container } from 'react-bootstrap';\nimport NewSearch from './components/NewSearch';\nimport styled from 'styled-components';\nimport { Component } from 'react';\nimport City from './assets/city.png';\n\n\n\nconst Styles = styled.div`\n    .homeHeading{\n        padding-top : 25%;\n        color: white;\n    }\n\n    .headingRow{\n        padding-top : 500px;\n    }\n\n\n    img{\n        padding-top :50px;\n        padding-bottom :50px;\n        height: auto;\n        align-content: right;   \n    }\n`;\n\nvar haveIUpdated = false;\n\n\nexport class Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            s1: \"\",\n            s2: \"\",\n            s3: \"\",\n            s4: false\n        }\n    }\n\n\n    sendData = () => {\n        this.props.parentCallback(this.state);\n    }\n\n\n\n    callbackFunction = (childData) => {\n        this.setState({\n            s1: childData.searchMain,\n            s2: childData.searchLocation,\n            s3: childData.searchRadius,\n            s4: childData.selectedOption,\n        })\n    }\n    // console.log(this.state)\n    // this.sendData()\n\n    render() {\n        if (!this.state.s4) {\n            return (\n\n                <Styles>\n                    <NewSearch home={true} parentCallback={this.props.parentCallback} />\n                    <Row style={{ background: \"#32a852\", }}>\n\n                    </Row>\n                </Styles>\n            )\n        } else {\n            return (\n\n                <ul>\n                    <li>{this.state.s1}</li>\n                    <li>{this.state.s2}</li>\n                    <li>{this.state.s3}</li>\n                    <li>{this.state.s4}</li>\n                </ul>\n            )\n        }\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n\n    .checkBtn {\n        text-align: right;\n        background-color: #17A2B8;\n        color: white;\n    }\n\n    .modal{\n        display: none;\n        position: fixed;\n        z-index: 1;\n        left: 0;\n        top:0;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n        background-color: rgb(0,0,0);\n        background-colour: (0,0,0,0.4);\n    }\n\n    .modal-content{\n        background-color: #fefefe;\n        margin: 15% auto;\n        padding: 20px;\n        border: 1px solid #888;\n        width: 80%;\n    }\n\n`;\n\nexport class Card extends Component {\n    \n    getStyle = () => {\n        return {\n            padding: '0.7em',\n            fontSize: '0.7em',\n        }\n    }\n\n    \n    \n    render() {\n        return (\n            <Styles> \n\n            <div style={{'margin-top': '1em', 'padding':'1em', backgroundColor: '#0b9cdb26'}} className={'row align-items-center'}>\n                <div className={'col-12'}>\n                    \n                    <div className={'row'}>\n                        <div style={{fontSize: '1.4em'}} className={'col-12'}>\n                            {this.props.card.DRGDefinition}\n                        </div>\n                    </div>\n\n                    <div style={{fontSize: '1em'}}  className={'row'}>\n                        <div className={'col-12'}>\n                            GPDID: {this.props.card.GPDID}\n                        </div>\n                    </div>\n\n                    <div style={{'margin-top':'1em'}} className={'row'}>\n                        <div className={'col-8'}>\n                            {this.props.card.ProviderName}\n                        </div>\n                        <div className={'col-4 text-center'}>\n                            ${this.props.card.TotalPayments}\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n            </Styles>\n        )\n    }\n}\n\n// var modal = document.getElementById(\"myModal\");\n\n// var checkBtn = document.getElementById(\"myBtn\");\n\n// var span = document.getElementsByClassName(\"close\")[0];\n\n// checkBtn.onclick = function(){\n//     modal.style.display = \"block\";\n// }\n\n// span.onclick = function() {\n//     modal.style.display = \"none\";\n// }\n\n// window.onclick = function(event){\n//     if(event.target === modal){\n//         modal.style.display = \"none\";\n//     }\n// }\nCard.propTypes = {\n    card: PropTypes.object.isRequired\n}\n\nexport default Card\n","import React, { Component } from 'react';\nimport Card from './Card'\n// import { watchFile } from 'fs';\n// import PropTypes from 'prop-types'\n\nclass ProcedureList extends Component {\n  render() {\n    return this.props.procedures.map((card) => (\n        <Card key={card.id} card={card} />\n    ));\n  }\n\n}\n\n// ProcedureList.propTypes = {\n//   cards: PropTypes.array.isRequired\n// }\n\nexport default ProcedureList;\n","import React from 'react';\n\nexport const About = () =>(\n    <div>\n        <h1 style={{'margin-top':'2em'}}>About Us</h1>\n        <p></p>\n        <p>Using the very best in IF statement, machine learning, AI, blockchain technology devloped by the hacker '4chan' we compare healthcare costs across the US.</p>\n        <p></p>\n        <h3>Created by :</h3>\n        <p></p>\n        <div className={'container'}>\n            <div className={'row'}>\n                <div className={'col-4'}>\n                    Alfie Hippisley\n                </div>\n                <div className={'col-4'}>\n                    Marius Urbelis\n                </div>\n                <div className={'col-4'}>\n                    Daniel Blackley\n                </div>\n            </div>\n            <div className={'row mt-2'}>\n                <div className={'col-4'}>\n                    Ruth Carnegie\n                </div>\n                <div className={'col-4'}>\n                    Callum Darling\n                </div>\n                <div className={'col-4'}>\n                    Peter Leslie\n                </div>\n            </div>\n        </div>\n        \n    </div>\n)","import React,{Component} from 'react';\n\nimport { Card } from './components/Card';\nimport ProcedureList from './components/ProcedureList';\n\nclass Procedure extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            procedures: []\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://api.urbelis.dev/procedures?=back',{\n            mode: 'cors',\n            method: 'GET',\n            headers:{\n                'Access-Control-Allow-Origin':'*'\n            },},).then(response => {\n                if(response.ok){\n                    response.json().then(json => {\n                        console.log(json)\n                        this.setState({procedures: json});\n                    });\n                }\n            });\n        }\n   \n   \n}\n\nexport default Procedure;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n\n    .footer {\n        flex-shrink: 0;\n        text-align: center;\n        background-color: grey;\n        color: white;\n    }\n\n`;\n\nexport const Version = (props) => (\n    <Styles>\n        <footer className=\"footer\">\n            <p>Sprint 2 Edition</p>\n        </footer>\n    </Styles>\n)   ","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n    background: rgb(11,156,219);\n    background: linear-gradient(162deg, rgba(11,156,219,1) 0%, rgba(128,219,120,1) 100%);\n    height: auto;\n`;\n\nexport const ColorLayout = (props) => (\n    <Styles>\n            <Container>\n                {props.children}\n            </Container>\n    </Styles>\n)","import React from 'react';\nimport { Nav, Navbar/*, NavbarBrand */ } from 'react-bootstrap';\n\nimport styled from 'styled-components';\n// import { Switch } from 'react-router-dom';\n\nconst Styles = styled.div`\n    .navbar {\n        font-size: 20px;\n    }\n\n    .navbar-brand{\n        font-size: 30px;\n    }\n\n    .navbar-brand, .navbar-nav .nav-link {\n        color: white;\n        &:hover {\n            color: white;\n        }\n    }\n`;\n\nexport const NavigationBar = () => (\n    <Styles>\n        <Navbar expand=\"lg\">\n            <Navbar.Brand href=\"/\">helpme.io</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    \n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ProcedureList from './ProcedureList';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: '', procedures: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n\n  sendData = () => {\n    this.props.parentCallback(\"Hey Popsie, How’s it going?\");\n  };\n\n  handleChange(event) {\n    this.setState({value: document.getElementById('text-field').value});\n  }\n\n  handleClick(event) {\n    alert(this.state.value)\n  }\n\n  getProcedures = () => {\n    fetch('https://api.urbelis.dev/procedures?query=' + document.getElementById('text-field').value, {\n      mode: 'cors',\n      method: 'GET',\n      headers:{\n        'Access-Control-Allow-Origin':'*'\n      },},).then(response => {\n      if (response.ok) {\n        response.json().then(data => this.setState({ 'procedures': data }))\n      }\n    });\n  }\n\n\n  render() {\n\n    if (this.state.procedures) {\n      return (\n        <div className={'container'}>\n          <div className={'row mt-2 mb-2'}>\n            <div className={'col-12'}>\n              <h2>Search for a procedure</h2>\n            </div>\n          </div>\n          <div className={'row'}>\n            <div className={'col-8'}>\n              {this.props.name}\n            </div>\n          </div>\n          <div className={'row'}>\n          <div className={'col-8'}>\n              <input type=\"text\" className={'form-control'} id='text-field' onChange={this.handleChange} />\n            </div>\n            <div className={'col-4'}>\n              <button className={'btn btn-info'} onClick={this.getProcedures}>Search</button>\n            </div>\n          </div>\n          <div className={'row mt-2'}>\n            <div className={'col-12'}>\n              <ProcedureList procedures={this.state.procedures}></ProcedureList>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className={'container'}>\n          <div className={'row mt-2 mb-2'}>\n            <div className={'col-12'}>\n              <h2>Search for a procedure</h2>\n            </div>\n          </div>\n          <div className={'row'}>\n            <div className={'col-8'}>\n              {this.props.name}\n            </div>\n          </div>\n          <div className={'row'}>\n            <div className={'col-8'}>\n              <input type=\"text\" className={'form-control'} id='text-field' onChange={this.handleChange} />\n            </div>\n            <div className={'col-4'}>\n              <button className={'btn btn-info'} onClick={this.getProcedures}>Search</button>\n            </div>\n            <p id='results'></p>\n          </div>\n        </div>\n      );\n    }\n\n    \n  }\n}\n\nReactDOM.render(<SearchBar />, document.getElementById('root'));\n\nexport default SearchBar\n","import React from 'react';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Placeholder from '../assets/placeholder.png';\nimport styled from 'styled-components';\nimport SearchBar from './SearchBar'\n\nconst Styles = styled.div`\n    .homeHeading{\n        padding-top : 10%;\n        color: grey;\n    }\n\n    .headingRow{\n        padding-top : 500px;\n    }\n\n\n    img{\n        padding-top :50px;\n        height: auto;\n        align-content: right;   \n    }\n`;\n\n\nexport const HomepageSearch = () =>(\n\n    \n    <Styles>\n        <Row>\n            <Col>\n                <h1 class = \"homeHeading\">Start Saving Money Today</h1>\n                <p>Using our super advanced AI search tools that are absolutly\n                    not a bunch of IF statements, we can help you find the best\n                    price for the healthcare you require. Simply enter your location\n                    and the name/code of the procedure and hit search.\n                     \n                </p>\n            </Col>\n\n            \n        </Row>\n    </Styles>\n)\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n`;\n\nexport const LowerLayout = (props) => (\n    <Styles>\n            <Container>\n                {props.children}\n            </Container>\n    </Styles>\n)","import React from 'react';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n\n    .footer {\n        margin-top: 10%;\n        padding-top: 25px;\n        padding-bottom: 10px;\n        flex-shrink: 0;\n        text-align: center;\n        background-color: \t#383838;\n        color: white;\n    }\n\n`;\n\nexport const Footer = (props) => (\n    <Styles>\n        <footer className=\"footer\">\n            <h2>helpme.io</h2>\n            <p>Made with love in Dundee ❤️</p>\n        </footer>\n    </Styles>\n)   ","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport City from '../assets/city.png';\nimport Image from 'react-bootstrap/Image';\nimport styled from 'styled-components';\n\n\nconst Styles = styled.div`\n\n    .homeHeading{\n        padding-top : 50%;\n        color: grey;\n    }\n    .homeHeading2{\n        padding-top : 10%;\n        color: grey;\n    }\n\n    .footer {\n        flex-shrink: 0;\n        text-align: center;\n        background-color: grey;\n        color: white;\n    }\n\n    img{\n        padding-top :50px;\n        height: auto;\n        align-content: right;   \n    }\n\n`;\n\nexport const CityBanner = (props) => (\n    <Styles>\n        <Row>\n            <Col><h1 class=\"homeHeading\">A smarter way to find affordable healthcare</h1></Col>\n            <Col><Image src={City} align=\"right\" /></Col>\n        </Row>\n        <Row>\n            <Col>\n                <h1 class = \"homeHeading2\">Start Saving Money Today</h1>\n                <p>Using our super advanced AI search tools that are absolutly\n                    not a bunch of IF statements, we can help you find the best\n                    price for the healthcare you require. Simply enter your location\n                    and the name/code of the procedure and hit search.\n                </p>\n            </Col>\n        </Row>\n    </Styles>\n)   ","import { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';\nimport React, { Component } from 'react';\nimport getDistance from 'geolib/es/getDistance';\n\n// var origin = \n//var origin = [\"Dundee\", { lat: 56.462002, lng: -2.970700 }]\nvar markers = []\n// var locations = new Array(\n// [\"Dundee\", { lat: 56.462002, lng: -2.970700 }],\n// [\"Dunde1\", { lat: 57.462002, lng: -2.970700 }],\n// [\"Dunde2\", { lat: 58.462002, lng: -2.970700 }],\n// [\"Dunde3\", { lat: 59.462002, lng: -2.970700 }],\n// [\"Dunde4\", { lat: 60.462002, lng: -2.970700 }],\n// )\n\nclass HospitalsMap extends Component {\n\n\tshouldComponentUpdate(nextProps, nextState) {\n\t\tif(this.state.activeMarker != nextState.activeMarker){\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t  }\n\t//lobal locations = props.hospList\n\torigin = this.props.hospList[0]\n\n\tfindDistancesFromCoord(lcat) {\n\t\tvar lo = lcat[0]\n\t\tvar gd = getDistance(this.props.hospList[0][1], lcat[1])\n\t\t//return lo + \": \" + gd / 1000 + \"km\"\n\t\treturn Math.round(gd / 1000) + \"km\"\n\t\t//return getDistance(locations[0][1],locations[1][1])\n\t}\n\n\tprintLocals() {\n\t\tvar arrayLength = this.props.hospList.length;\n\t\tvar finalProduct = \"\";\n\t\tfor (var i = 0; i < arrayLength; i++) {\n\t\t\tfinalProduct = finalProduct + this.findDistancesFromCoord(this.props.hospList[i]) + \"<br>\";\n\t\t}\n\t\treturn finalProduct;\n\t}\n\n\tmarcPush() {\n\t\t//markers.push(<Marker\n\t\t//\tposition={origin[1]}\n\t\t//\tname={origin[0]} />);\n\n\t\tvar arrayLength = this.props.hospList.length;\n\t\tfor (var i = 0; i < arrayLength; i++) {\n\t\t\tif(i==0){\n\t\t\t\tmarkers.push(<Marker\n\t\t\t\t\tposition={this.props.hospList[i][1]}\n\t\t\t\t\tonClick={this.onMarkerClick}\n\t\t\t\t\tlabel={\"You are Here\"}\n\t\t\t\t\tname={this.props.hospList[i][0]}\n\t\t\t\t\ttitle={this.props.hospList[i][0]} />);\n\t\t\t}else{\n\t\t\tmarkers.push(<Marker\n\t\t\t\tposition={this.props.hospList[i][1]}\n\t\t\t\tonClick={this.onMarkerClick}\n\t\t\t\tlabel={this.findDistancesFromCoord(this.props.hospList[i])}\n\t\t\t\tname={this.props.hospList[i][0]}\n\t\t\t\ttitle={this.props.hospList[i][0]} />);\n\t\t\t}\n\t\t}\n\t}\n\n\tstate = {\n\t\tshowingInfoWindow: false,\n\t\tactiveMarker: {},\n\t\tselectedPlace: {},\n\t};\n\n\tonMarkerClick = (props, marker, e) =>\n\t\tthis.setState({\n\t\t\tselectedPlace: props,\n\t\t\tactiveMarker: marker,\n\t\t\tshowingInfoWindow: true\n\t\t});\n\n\tonMapClicked = (props) => {\n\t\tif (this.state.showingInfoWindow) {\n\t\t\tthis.setState({\n\t\t\t\tshowingInfoWindow: false,\n\t\t\t\tactiveMarker: null\n\t\t\t})\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div style={{width: this.props.wi, height: this.props.hi }}>\n\t\t\t\t\t<Map google={this.props.google}\n\t\t\t\t\t\tonClick={this.onMapClicked}\n\t\t\t\t\t\tinitialCenter={this.props.hospList[0][1]}\n\t\t\t\t\t\tzoom={11}\n\t\t\t\t\t\tstyle={{width: this.props.wi, height: this.props.hi, backgroundColor: 'powderblue'}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.marcPush()}\n\t\t\t\t\t\t{markers}\n\t\t\t\t\t\t<InfoWindow\n\t\t\t\t\t\t\tmarker={this.state.activeMarker}\n\t\t\t\t\t\t\tvisible={this.state.showingInfoWindow}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<h1>{this.state.selectedPlace.name}</h1>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</InfoWindow>\n\t\t\t\t\t</Map>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n// export class MapContainer extends React.Component { }\nexport default GoogleApiWrapper({\n\t// apiKey: 'AIzaSyBUGx7RRQurAj4RxZb0NzMNtOHzcUZZpVo'\n\tapiKey: ''\n})(HospitalsMap);\n\n\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components';\nimport HospitalSelectionPanel from './HospitalSelectionPanel';\nimport HospitalsMap from './HospitalsMap';\n\n\nconst Styles = styled.div`\n\n    .checkBtn {\n        text-align: right;\n        background-color: #17A2B8;\n        color: white;\n    }\n\n    .modal{\n        display: none;\n        position: fixed;\n        z-index: 1;\n        left: 0;\n        top:0;\n        width: 100%;\n        height: 100%;\n        overflow: auto;\n        background-color: rgb(0,0,0);\n        background-colour: (0,0,0,0.4);\n    }\n\n    .modal-content{\n        background-color: #fefefe;\n        margin: 15% auto;\n        padding: 20px;\n        border: 1px solid #888;\n        width: 80%;\n    }\n\n`;\n\nexport class ProvCard extends Component {\n\n    getStyle = () => {\n        return {\n            padding: '0.7em',\n            fontSize: '0.7em',\n        }\n    }\n\n    \n    //<HospitalsMap hospList={this.props.locations} hi={\"90vh\"} wi={\"90vw\"}/>    \n    render() {\n        console.log(this.props.stater)\n        if(this.props.card.State==this.props.state){\n            return (\n                <Styles> \n                <div style={{'margin-top': '1em', backgroundColor: '#0b9cdb26'}} className={'row align-items-center'}>\n                    <div className={'col-12'} style={{'padding-top':'1em'}}>\n                        <p style={{'fontSize':'1em'}}><b>{this.props.card.ProviderName}</b></p>\n                        <p style={{'fontSize':'0.8em'}}>{this.props.card.Address}, {this.props.card.State}</p>\n                    </div>\n\n                    {/* <div className={'col-1'} style={this.getStyle()}>\n                        <button className={'btn-info btn'}>P</button>\n                    </div>\n\n                    <div className={'col-1'} style={this.getStyle()}>\n                        <button className={'btn-info btn'}>H</button> \n                    </div> */}\n                    {/* <div id=\"priceModal\" class=\"modal\">\n                        <div class=\"priceModalContent\">\n                            <span class=\"close\"> </span>\n                            <p>weoowooow</p>\n                        </div>\n                    </div>  */}\n                \n                </div>\n                </Styles>\n            )\n        }else{\n            return (<div></div>)\n        }\n    }\n}\n\n// var modal = document.getElementById(\"myModal\");\n\n// var checkBtn = document.getElementById(\"myBtn\");\n\n// var span = document.getElementsByClassName(\"close\")[0];\n\n// checkBtn.onclick = function(){\n//     modal.style.display = \"block\";\n// }\n\n// span.onclick = function() {\n//     modal.style.display = \"none\";\n// }\n\n// window.onclick = function(event){\n//     if(event.target === modal){\n//         modal.style.display = \"none\";\n//     }\n// }\nProvCard.propTypes = {\n    card: PropTypes.object.isRequired\n}\n\nexport default ProvCard\n","import { default as React} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport styled from 'styled-components';\nimport HospitalSelectionPanel from './HospitalSelectionPanel';\n\n\nconst state = \"MO\"\nconst startLocation = {lat: 38.6545, lng: -90.3117}\nconst stateLetters= [ 'AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FM', 'FL', 'GA', 'GU', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MH', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'MP', 'OH', 'OK', 'OR', 'PW', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY' ];\n\nconst Styles = styled.div`\n    h1{\n        color: grey;\n    }\n\n    .PageTitle{\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n\n    hr{\n        border: 1px solid grey;\n\n    }\n`;\n\n\nclass HospitalSearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: '', sub:false};\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    this.setState({sub: true});\n\n    //alert('A name was submitted: ' + this.state.value);\n    \n    //event.preventDefault();\n  }\n\n  render() {\n    if(this.state.sub==true && stateLetters.indexOf(this.state.value) > -1){\n     //reactDOM.unmountComponentAtNode(document.getElementById('));\n     //ReactDOM.unmountComponentAtNode(document.getElementById(''));\n      return(\n\n        <Styles>\n          <p>Results For: {this.state.value}</p>\n        <Row>\n            <Col>\n            <HospitalSelectionPanel startLocation={startLocation} stater={this.state.value} left={true}/> \n            </Col>\n            <Col className={'overflow-auto'} style={{height:'50vh'}}>\n              <HospitalSelectionPanel left={false}/>\n                {/* <p>Loading...</p> */}\n            </Col>\n        </Row>\n    </Styles>\n      );\n    }\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <p>Enter Your State Letters (e.g. TX)</p> \n        <label>\n        <Styles>\n        <Row>\n            <Col>\n              <input className={'form-control'} type=\"text\" value={this.state.value} onChange={this.handleChange} />\n            </Col>\n            <Col>\n              <input className={'btn btn-info'} type=\"submit\" value=\"Submit\" />              \n            </Col>\n        </Row>\n        </Styles>\n        </label>\n      </form>\n    );\n  }\n}\n\nexport default HospitalSearchBar","import React, { Component } from 'react'\nimport ProcedureList from './ProcedureList';\nimport ProvCard from './ProvCard'\nimport HospitalsMap from '../components/HospitalsMap';\nimport HospitalSearchBar from '../components/HospitalSearchBar'\n\nvar locations = new Array(\n\n)\n\nvar stateoid = 'CA'\nexport default class HospitalSelectionPanel extends Component {\n\n    getLocals(){\n      stateoid = this.props.stater;\n      if(this.props.startLocation==null){\n        var startRecord = [\"Your Location\", this.props.startLocation];\n        locations.push(startRecord)\n      }\n      var json = this.state.procedures;\n      var y=0;\n      for(var i = 0; i < json.length; i++) {\n        var obj = json[i];\n        if(obj.State==this.props.stater && y<500){\n          y++;\n          var innerRecord = { lat: obj.Latitude, lng: obj.longitude }\n          var record = [obj.ProviderName, innerRecord]\n          locations.push(record)\n        }\n        \n    }\n    console.log(locations);\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {value: '', procedures: ''};\n      }\n\n    getProcedures = () => {\n        fetch('https://api.urbelis.dev/providers' , {\n          mode: 'cors',\n          method: 'GET',\n          headers:{\n            'Access-Control-Allow-Origin':'*'\n          },},).then(response => {\n          if (response.ok) {\n            response.json().then(data => this.setState({ 'procedures': data }))\n          }\n        });\n      }\n\n    render() {\n      this.getProcedures()\n        if (this.state.procedures) {\n            if(this.props.left == true){\n              this.getLocals()  \n              console.log(this.state)\n              return(\n                  <HospitalsMap hospList={locations} hi={\"70vh\"} wi={\"35vw\"}/>\n              )\n            }\n            console.log(this.props.stater)\n            return this.state.procedures.map((card) => (\n               <ProvCard state={stateoid} card={card} key={card.id} locations={locations}/>\n               \n                \n                )\n            );\n            \n          } else {\n            return (\n              <>\n              \n              </>\n          );\n        }\n    }\n}\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport styled from 'styled-components';\nimport HospitalsMap from '../components/HospitalsMap';\nimport HospitalSelectionPanel from './HospitalSelectionPanel';\nimport HospitalSearchBar from './HospitalSearchBar';\n\n\n\n// const con = mysql.createConnection({\n// \thost: \"urbelis.dev\",\n// \tuser: \"adminrootusername\",\n// \tpassword: \"adminrootpassword\",\n// \tdatabase: \"agile\"\n// });\n\n// con.connect(function(err) {\n// \tif (err) throw err;\n// \tconsole.log(\"connected!\")\n\n// \tcon.query(\"SELECT * FROM GPD\", function (err, result, fields) {\n//     if (err) throw err;\n//     res = result;\n//     console.log(result);\n//   \t});\n// });\n\nconst state = \"MO\"\nconst startLocation = {lat: 38.6545, lng: -90.3117}\nconst Styles = styled.div`\n    h1{\n        color: grey;\n    }\n\n    .PageTitle{\n        padding-top: 10px;\n        padding-bottom: 10px;\n    }\n\n    hr{\n        border: 1px solid grey;\n\n    }\n`;\n\n// <HospitalsMap hospList={locations} hi={\"40vh\"} wi={\"40vw\"}/>\nexport const HospitalsSelection = (props) => (\n    <Styles>\n        <h1 class = \"PageTitle\"> Hospitals In Your Local Area </h1>\n        <hr></hr>\n        <HospitalSearchBar></HospitalSearchBar>\n    </Styles>\n)   \n\n//        <Row>\n{/* <HospitalSearchBar/>\n//<Col>\n//<HospitalSelectionPanel startLocation={startLocation} stater={state} left={true}/> \n//</Col>\n//<Col>\n // <HospitalSelectionPanel left={false}/>\n //   {/* <p>Loading...</p> */}\n//</Col>\n//</Row> */}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n// These are for page navigation, components change depending page..\nimport { Home } from './Home';\n//import { Hospitals } from './Hospitals';\nimport { Procedures } from './Procedures';\nimport { About } from './About';\nimport { NoMatch } from './NoMatch';\n\n// These are for each UI component\nimport { Version } from './components/Version';\nimport { ColorLayout } from './components/ColorLayout';\nimport { NavigationBar } from './components/NavigationBar';\nimport { HomepageSearch } from './components/HomepageSearch';\nimport { LowerLayout } from './components/LowerLayout';\nimport { Footer } from './components/Footer';\nimport { CityBanner } from './components/CityBanner';\n\nimport ProcedureList from './components/ProcedureList';\nimport HospitalsMap from './components/HospitalsMap'\nimport { HospitalsSelection } from './components/HospitalsSelection';\nimport SearchBar from './components/SearchBar';\n\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\n\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport NewSearch from './components/NewSearch';\n\nvar locations = new Array(\n    [\"Dundee\", { lat: 56.462002, lng: -2.970700 }],\n    [\"Dunde1\", { lat: 57.462002, lng: -2.970700 }],\n    [\"Dunde2\", { lat: 58.462002, lng: -2.970700 }],\n    [\"Dunde3\", { lat: 59.462002, lng: -2.970700 }],\n    [\"Dunde4\", { lat: 60.462002, lng: -2.970700 }],\n)\n\n// Used for a loading spinner\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            procedures: [],\n            proceduresLoaded: false,\n            query: '',\n            loading: false,\n            initial: true,\n            searchMain: \"\",\n            searchLocation: \"\",\n            searchRadius: \"\",\n            selectedOption: false\n        }\n    }\n\n    getProcedures = () => {\n        fetch('https://api.urbelis.dev/procedures?query=' + this.state.searchMain, {\n            mode: 'cors',\n            method: 'GET',\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            },\n        }).then(response => {\n            if (response.ok) {\n                response.json().then(data => this.setState({ 'procedures': data }))\n            }\n        });\n    }\n\n    callbackFunction2 = (childData) => {\n        console.log(childData)\n        this.setState({\n            searchMain: childData.searchMain,\n            searchLocation: childData.searchLocation,\n            searchRadius: childData.searchRadius,\n            selectedOption: childData.selectedOption\n        })\n        this.state.initial = false\n    }\n\n    render() {\n\n        if (this.state.initial) {\n            return (\n\n                <React.Fragment>\n\n                    {/* Header Area - Essentially the Navbar and color gradient components*/}\n                    <ColorLayout>\n                        <NavigationBar>\n                        </NavigationBar>\n                        <Router>\n                            <Switch>\n                                {/* This is for the homepage city picture and heading text 'smarter healthcare etc' */}\n                                {/* <Route path = \"PAGE-NAME\" component = {\"NAME-OF-COMPONENT,NAME-OF-COMPONENT-2, etc etc\"}/> */}\n                                {/* <Route exact path=\"/\" component={Home} /> */}\n                                <Home parentCallback={this.callbackFunction2} />\n                            </Switch>\n                        </Router>\n                    </ColorLayout>\n\n                    {/* Main page area, put your components in here <3 - LowerLayout is just a react container to keep things neat */}\n                    {/* <Route path = \"PAGE-NAME(Page you want component to appear on)\" component = {\"NAME-OF-COMPONENT,NAME-OF-COMPONENT-2, etc etc\"}/> */}\n                    <LowerLayout>\n                        <Router>\n                            <Switch>\n                                <Route path=\"/about\" component={About} />\n                            </Switch>\n                        </Router>\n                    </LowerLayout>\n\n                    {/* Main page area, put your components in here <3 - LowerLayout is just a react container to keep things neat */}\n                    {/* <Route path = \"PAGE-NAME(Page you want component to appear on)\" component = {\"NAME-OF-COMPONENT,NAME-OF-COMPONENT-2, etc etc\"}/> */}\n                    <LowerLayout>\n                        <Router>\n                            <Switch>\n                                <Route exact path=\"/\" component={CityBanner}/>\n                            </Switch>\n                        </Router>\n                    </LowerLayout>\n\n                    {/* Its kinda obvious what this bit  does..*/}\n                    <Footer>\n                    </Footer>\n\n                </React.Fragment>\n\n            );\n        } else {\n            if (!this.state.proceduresLoaded) {\n                this.getProcedures()\n                this.state.proceduresLoaded = true\n            }\n            return (\n\n                <React.Fragment>\n                    <ColorLayout>\n                        <NavigationBar>\n                        </NavigationBar>\n                    </ColorLayout>\n\n                    <div className={'container-fluid'}>\n                        <Row style={{ 'background': '#aaaaaa' }} className={'align-items-center'} style={{ width: 'auto' }}>\n\n                            <NewSearch home={false} />\n\n\n                        </Row>\n\n                        <Row style={{ height: '90vh' }}>\n                            <div className={'col-3 p-3'}>\n                                <ProcedureList procedures={this.state.procedures}></ProcedureList>\n                            </div>\n\n                            <div style={{ 'background': '#eeaaaa' }} className={'col-9'}>\n                                <p>Map</p>\n                            </div>\n                        </Row>\n\n                    </div>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/city.864ef2ac.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder.ed5c0e07.png\";"],"sourceRoot":""}